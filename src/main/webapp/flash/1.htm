<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Player Event Tester</title>

</head>
<body>

	<div id="player" style="float: left">

		<object seamlesstabbing="undefined" class="BrightcoveExperience" id="myExperience1754261637001"
			data="http://c.brightcove.com/services/viewer/federated_f9?&amp;width=480&amp;height=270&amp;flashID=myExperience1754261637001&amp;bgcolor=%23FFFFFF&amp;playerID=2549948545001&amp;playerKey=AQ~~%2CAAABmA9XpXk~%2C-Kp7jNgisreVadKjzdyJfLcfukyXcGqB&amp;isVid=true&amp;isUI=true&amp;dynamicStreaming=true&amp;includeAPI=true&amp;templateLoadHandler=myTemplateLoaded&amp;templateReadyHandler=brightcove%5B%22templateReadyHandlermyExperience1754261637001%22%5D&amp;%40videoPlayer=1754261637001&amp;autoStart=&amp;debuggerID=&amp;originalTemplateReadyHandler=onTemplateReady&amp;startTime=1451021947137"
			type="" height="270" width="480">
			<param value="always" name="allowScriptAccess">
			<param value="true" name="allowFullScreen">
			<param value="false" name="seamlessTabbing">
			<param value="true" name="swliveconnect">
			<param value="window" name="wmode">
			<param value="high" name="quality">
			<param value="#FFFFFF" name="bgcolor">
		</object>
		<div>
			<button id="changeVideo" onclick="changeVideo()">Change Video</button>
		</div>
		<script src="SmartPlayerAPI.js" type="text/javascript"></script>
		<div>
			<button id="changeVideo" onclick="changeVideo()">Change Video</button>
		</div>
	</div>
	<script type="text/javascript">
//brightcove.createExperiences();
</script>
	<div id="log" style="float: left">
		<div id="positionLog"></div>
		<div id="eventLog"></div>
	</div>
	<script>
var myTemplateLoaded, onTemplateReady, player, modVP, modExp, modCon, previousVideoID=0, currentVideo, videosToSwap=new Array(1754261637001,1754261438001); //videos we will swap

myTemplateLoaded = function (experienceID) {
    player = brightcove.api.getExperience(experienceID);
    modVP = player.getModule(brightcove.api.modules.APIModules.VIDEO_PLAYER);
    modExp = player.getModule(brightcove.api.modules.APIModules.EXPERIENCE);
    modCon = player.getModule(brightcove.api.modules.APIModules.CONTENT);
}

onTemplateReady = function (evt) {
    modVP.getCurrentVideo(function (dto) {
    });
    modVP.addEventListener(brightcove.api.events.MediaEvent.BEGIN, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.CHANGE, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.COMPLETE, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.ERROR, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.PLAY, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.PROGRESS, onMediaProgressFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.STOP, onMediaEventFired);
}

function onMediaEventFired(evt) {
   document.getElementById("eventLog").innerHTML += "MEDIA EVENT: " + evt.type + " fired at position: " + evt.position + "<BR>";
   if (evt.type === "mediaComplete") {
       changeVideo();
   }
}

function onMediaProgressFired(evt) {
   document.getElementById("positionLog").innerHTML = "CURRENT POSITION: " + evt.position;
}

function changeVideo() {
   modVP.getCurrentVideo(currentVideoCallback);
}

function currentVideoCallback(currentVideo) {
   document.getElementById("positionLog").innerHTML = "";
   document.getElementById("eventLog").innerHTML = "";

   if (currentVideo.id == videosToSwap[0]) {
      modVP.loadVideoByID(videosToSwap[1]);
   } else {
      modVP.loadVideoByID(videosToSwap[0]);
   }
}
</script>

</body>
</html>


